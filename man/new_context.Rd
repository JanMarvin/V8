% Generated by roxygen2 (4.0.2): do not edit by hand
\name{new_context}
\alias{V8}
\alias{new_context}
\title{Run JavaScript in a V8 context}
\usage{
new_context()
}
\description{
A \emph{context} is an execution environment that allows separate, unrelated,
JavaScript code to run in a single instance of V8. You must explicitly specify
the context in which you want any JavaScript code to be run.
}
\details{
JSON is used for all data interchange beteen R and JavaScript. Therefore you can
(and should) only exchange data types that have a sensible JSON representation.
All aguments and objects are automatically converted according to the mapping
described in \href{http://arxiv.org/abs/1403.2805}{Ooms (2014)}, and implemented
by the jsonlite package in \code{\link{fromJSON}} and \code{\link{toJSON}}.
}
\examples{
# Create a new context
ct <- new_context();

# Evaluate some code
ct$eval("foo=123")
ct$eval("bar=456")
ct$eval("foo+bar")

# Functions and closures
ct$eval("JSON.stringify({x:Math.random()})")
ct$eval("(function(x){return x+1;})(123)")

# Objects (via JSON only)
ct$assign("mydata", mtcars)
ct$get("mydata")

# Validate syntax without evaluating
ct$validate("function foo(x){2*x}") #TRUE
ct$validate("foo = function(x){2*x}") #TRUE
ct$validate("function(x){2*x}") #FALSE

# Use a JavaScript library (example from underscore manual)
ct$source(system.file("js/underscore.js", package="V8"))
ct$eval("_.templateSettings = {interpolate: /\\\\{\\\\{(.+?)\\\\}\\\\}/g}")
ct$eval("var template = _.template('Hello {{ name }}!')")
ct$call("template", list(name = "Mustache"))

# Call a function
ct$call("function(x, y){return x[0] * y[0]}", 123, 3)

# Remove triggers cleanup
rm(ct)
}
\references{
A Mapping Between JSON Data and R Objects (Ooms, 2014): \url{http://arxiv.org/abs/1403.2805}
}

