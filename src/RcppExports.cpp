// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/V8.h"
#include <Rcpp.h>

using namespace Rcpp;

// jseval
std::string jseval(std::vector< std::string > code);
RcppExport SEXP V8_jseval(SEXP codeSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector< std::string > >::type code(codeSEXP );
        std::string __result = jseval(code);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// jsvalidate
bool jsvalidate(std::vector< std::string > code);
RcppExport SEXP V8_jsvalidate(SEXP codeSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector< std::string > >::type code(codeSEXP );
        bool __result = jsvalidate(code);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// make_context
XPtr< v8::Persistent<v8::Context> > make_context();
RcppExport SEXP V8_make_context() {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        XPtr< v8::Persistent<v8::Context> > __result = make_context();
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
